{"version":3,"sources":["../node_modules/emailjs-com/source/index.js","../node_modules/emailjs-com/source/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/source/services/ui/UI.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","utils/validators.js","Pages/Contact/ContactForm/ContactForm.js","Pages/Contact/StatusMessage/StatusMessage.js","Pages/Contact/Contact.js"],"names":["Object","defineProperty","exports","value","EmailJSResponseStatus","sendForm","send","init","EmailJSResponseStatus_1","require","enumerable","get","UI_1","_userID","_origin","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","key","addEventListener","event","responseStatus","target","status","text","open","setRequestHeader","appendGoogleCaptcha","templatePrams","element","document","getElementById","userID","origin","serviceID","templateID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","form","selector","querySelector","nodeName","UI","progressState","formData","FormData","append","then","response","successState","error","errorState","default","httpResponse","this","responseText","clearAll","classList","remove","PROGRESS","DONE","ERROR","add","_defineProperty","obj","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","validators","trim","test","validate","isValid","ContactForm","props","content","pt","nameLabel","messageLabel","subject","phone","en","className","htmlFor","id","language","type","name","required","onChange","changeInputHandler","email","pattern","cols","rows","message","ErrorMessage","Contact","useState","errorMessage","setErrorMessage","successMessage","setSuccessMessage","isLoading","setIsLoading","contactMe","all","useReducer","state","action","changedValue","newValue","dispatch","useEffect","setTimeout","LoadingSpiner","Button","onClick","emailjs","result","console","log","catch","err"],"mappings":"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","file":"static/js/4.8d1a87ab.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmailJSResponseStatus = exports.sendForm = exports.send = exports.init = void 0;\nvar EmailJSResponseStatus_1 = require(\"./models/EmailJSResponseStatus\");\nObject.defineProperty(exports, \"EmailJSResponseStatus\", { enumerable: true, get: function () { return EmailJSResponseStatus_1.EmailJSResponseStatus; } });\nvar UI_1 = require(\"./services/ui/UI\");\nvar _userID = null;\nvar _origin = 'https://api.emailjs.com';\nfunction sendPost(url, data, headers) {\n    if (headers === void 0) { headers = {}; }\n    return new Promise(function (resolve, reject) {\n        var xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', function (event) {\n            var responseStatus = new EmailJSResponseStatus_1.EmailJSResponseStatus(event.target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', function (event) {\n            reject(new EmailJSResponseStatus_1.EmailJSResponseStatus(event.target));\n        });\n        xhr.open('POST', url, true);\n        for (var key in headers) {\n            xhr.setRequestHeader(key, headers[key]);\n        }\n        xhr.send(data);\n    });\n}\nfunction appendGoogleCaptcha(templatePrams) {\n    var element = document && document.getElementById('g-recaptcha-response');\n    if (element && element.value) {\n        templatePrams['g-recaptcha-response'] = element.value;\n    }\n    element = null;\n    return templatePrams;\n}\nfunction fixIdSelector(selector) {\n    if (selector[0] !== '#') {\n        return '#' + selector;\n    }\n    return selector;\n}\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nfunction init(userID, origin) {\n    _userID = userID;\n    _origin = origin || 'https://api.emailjs.com';\n}\nexports.init = init;\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {Object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nfunction send(serviceID, templateID, templatePrams, userID) {\n    var params = {\n        lib_version: '2.6.3',\n        user_id: userID || _userID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: appendGoogleCaptcha(templatePrams)\n    };\n    return sendPost(_origin + '/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json'\n    });\n}\nexports.send = send;\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nfunction sendForm(serviceID, templateID, form, userID) {\n    if (typeof form === 'string') {\n        form = document.querySelector(fixIdSelector(form));\n    }\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'Expected the HTML form element or the style selector of form';\n    }\n    UI_1.UI.progressState(form);\n    var formData = new FormData(form);\n    formData.append('lib_version', '2.6.3');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', userID || _userID);\n    return sendPost(_origin + '/api/v1.0/email/send-form', formData)\n        .then(function (response) {\n        UI_1.UI.successState(form);\n        return response;\n    }, function (error) {\n        UI_1.UI.errorState(form);\n        return Promise.reject(error);\n    });\n}\nexports.sendForm = sendForm;\nexports.default = {\n    init: init,\n    send: send,\n    sendForm: sendForm\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmailJSResponseStatus = void 0;\nvar EmailJSResponseStatus = /** @class */ (function () {\n    function EmailJSResponseStatus(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n    return EmailJSResponseStatus;\n}());\nexports.EmailJSResponseStatus = EmailJSResponseStatus;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UI = void 0;\nvar UI = /** @class */ (function () {\n    function UI() {\n    }\n    UI.clearAll = function (form) {\n        form.classList.remove(this.PROGRESS);\n        form.classList.remove(this.DONE);\n        form.classList.remove(this.ERROR);\n    };\n    UI.progressState = function (form) {\n        this.clearAll(form);\n        form.classList.add(this.PROGRESS);\n    };\n    UI.successState = function (form) {\n        form.classList.remove(this.PROGRESS);\n        form.classList.add(this.DONE);\n    };\n    UI.errorState = function (form) {\n        form.classList.remove(this.PROGRESS);\n        form.classList.add(this.ERROR);\n    };\n    UI.PROGRESS = 'emailjs-sending';\n    UI.DONE = 'emailjs-success';\n    UI.ERROR = 'emailjs-error';\n    return UI;\n}());\nexports.UI = UI;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","const checkMinLength = (value) => {\n    return value.trim().length >= 5;\n}\n\nconst checkIsEmail = (value) => {\n    return /^\\S+@\\S+\\.\\S+$/.test(value)\n}\n\nconst validators = {\n    minLength: checkMinLength,\n    isEmail:  checkIsEmail\n}\n\nconst validate = (value, target) => {\n    let isValid = true;\n\n    isValid = validators.minLength(value);\n\n    if(target === 'email' && isValid !== false) {\n        isValid = validators.isEmail(value);\n    }\n    \n    return isValid\n};\n\nexport default validate;","import React from 'react';\n\nimport './ContactForm.scss';\n\nconst ContactForm = props => {\n    const content = {\n        pt: {\n            nameLabel: 'Nome Completo',\n            messageLabel: 'Mensagem',\n            subject: 'Assunto',\n            phone: 'Telefone ou Celular'\n        },\n        en: {\n            nameLabel: 'Full Name',\n            messageLabel: 'Message',\n            subject: 'Subject',\n            phone: 'Cellphone'\n        }\n    }\n\n    const formData = props.formData;\n\n\n    return (\n        <div className=\"form__container\">\n            <form className=\"contact__form\">\n                <div className=\"form__first-line\">\n                    <div className=\"form__first-line__name\">\n                        <label htmlFor=\"name\" id=\"name-label\">{content[props.language].nameLabel}*</label>\n                        <input \n                            type=\"text\" \n                            name=\"name\" \n                            id=\"name\" \n                            required={true}\n                            onChange={props.changeInputHandler}\n                            value={formData.name.value}\n                        />                    \n                    </div>\n                    <div className=\"form__first-line__email\">\n                        <label htmlFor=\"email\" id=\"email-label\">E-mail*</label>\n                        <input \n                            type=\"email\" \n                            name=\"email\" \n                            id=\"email\" \n                            required={true}\n                            onChange={props.changeInputHandler}\n                            value={formData.email.value}\n                        />\n                    </div> \n                </div>\n                <div className=\"form__second-line\">\n                    <div className=\"form__second-line__phone\">\n                        <label htmlFor=\"phone\" id=\"phone-label\">{content[props.language].phone}</label>\n                        <input \n                            type=\"tel\" \n                            id=\"phone\" \n                            name=\"phone\" \n                            pattern=\"[+][1-999][0-9]{11,14}\"\n                            onChange={props.changeInputHandler}\n                            value={formData.phone.value}\n                        />\n                    </div>\n                    <div className=\"form__second-line__subject\">\n                        <label htmlFor=\"subject\" id=\"subject-label\">{content[props.language].subject}*</label>\n                        <input \n                            type=\"text\" \n                            name=\"subject\" \n                            id=\"subject\" \n                            required={true}\n                            onChange={props.changeInputHandler}\n                            value={formData.subject.value}\n                        />\n                    </div> \n                </div>\n                <label htmlFor=\"message\">{content[props.language].messageLabel}*</label>\n                <textarea \n                    name=\"message\" \n                    cols=\"30\" \n                    rows=\"10\"\n                    id=\"message\"\n                    onChange={props.changeInputHandler}\n                    value={formData.message.value}\n                ></textarea>\n            </form>\n        </div>\n    )\n};\n\nexport default ContactForm;","import React from 'react';\n\nimport './StatusMessage.scss';\n\nconst ErrorMessage = props => {\n    return (\n        <div className={`message__container ${props.error ? 'error' : 'success'}`}>\n            <p>{props.text}</p>\n        </div>\n    )\n}\n\nexport default ErrorMessage;","import React, { useState, useReducer, useEffect } from 'react';\nimport emailjs from 'emailjs-com';\n\nimport validate from '../../utils/validators';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport Button from '../../Components/Button/Button';\nimport LoadingSpiner from '../../Components/LoadingSpinner/LoadingSpiner';\nimport StatusMessage from './StatusMessage/StatusMessage';\n\nimport './Contact.scss';\n\nconst Contact = props => {\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [successMessage, setSuccessMessage] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const content = {\n        pt: {\n            contactMe: 'Entre em Contato',\n            send: 'Enviar Mensagem',\n            errorMessage: {\n                name: 'O nome completo deve conter no mínimo 5 caracteres.',\n                email: 'O email deve ser um email válido',\n                subject: 'O assunto deve conter no mínimo 5 caracteres.',\n                message: 'A mensagem deve conter no mínimo 5 caracteres.',\n                all: 'Os campos selecionados devem ser preenchidos e válidos'\n            },\n            successMessage: 'Seu email foi enviado com sucesso'\n        },\n        en: {\n            contactMe: 'Contact Me',\n            send: 'Send Message',\n            errorMessage: {\n                name: 'Full name must be at least 5 characters long.',\n                email: 'Email must be a valid one',\n                subject: 'Subject must be at least 5 characters long.',\n                message: 'Subject should be at least 5 characters long.',\n                all: 'All selected fields must be filled and valid'\n            },\n            successMessage: 'Your email was successfully sent'\n        }\n    }\n\n    const inputReducer = (state, action) => {\n        switch(action.type) {\n            case 'CHANGE': \n                const changedValue = {};\n    \n                changedValue[action.target] = {\n                    value: action.newValue,\n                    isValid: validate(action.newValue, action.target)\n                }\n\n                if(action.target === 'phone') {\n                    changedValue[action.target].isValid = true; \n                }\n    \n                if (!changedValue[action.target].isValid) {\n                    document.getElementById(`${action.target}`).classList.add('invalid');\n\n                    setErrorMessage(action.target);\n                } else {\n                    document.getElementById(`${action.target}`).classList.remove('invalid');\n\n                    setErrorMessage(null);\n                }\n    \n                return {\n                    ...state,\n                    ...changedValue\n                };\n    \n            case 'RESET': \n                return {\n                    name: {\n                        value: '',\n                        isValid: false\n                    },\n                    email: {\n                        value: '',\n                        isValid: false\n                    },\n                    phone: {\n                        value: '',\n                        isValid: false\n                    },\n                    subject: {\n                        value: '',\n                        isValid: false\n                    },\n                    message: {\n                        value: '',\n                        isValid: false\n                    }\n                };\n            default: \n                return state;\n        }\n    }\n\n    const [formData, dispatch] = useReducer( inputReducer, {\n        name: {\n            value: '',\n            isValid: false\n        },\n        email: {\n            value: '',\n            isValid: false\n        },\n        phone: {\n            value: '',\n            isValid: false\n        },\n        subject: {\n            value: '',\n            isValid: false\n        },\n        message: {\n            value: '',\n            isValid: false\n        }\n    });\n\n    const changeInputHandler = event => {\n        dispatch({\n            type: 'CHANGE',\n            target: event.target.id,\n            newValue: event.target.value\n        })\n    }\n\n    const resetInputHandler = event => {\n        dispatch({\n            type: 'RESET'\n        })\n    }\n\n    useEffect(() => {\n        if(successMessage) {\n            setTimeout(() => setSuccessMessage(null), 3000)\n        }\n    }, [successMessage]);\n    \n    const sendMail = event => {\n\n        if(!formData.name.isValid || !formData.email.isValid || !formData.subject.isValid || !formData.message.isValid) {\n            const idsArray = ['name', 'email', 'subject', 'message'];\n\n            idsArray.forEach(id => {\n                document.getElementById(id).classList.add('invalid');\n            });\n\n            return setErrorMessage('all');\n        }\n\n        setIsLoading(true);\n\n        emailjs\n            .sendForm(\n                'gmail', \n                'template_vPh5gB41', \n                document.querySelector('.contact__form'), \n                'user_O9xxD412qZE63tZEsLPZp'\n            )\n            .then(result => {\n                console.log(result);\n                resetInputHandler();\n                setIsLoading(false);\n                setSuccessMessage(true)\n            })\n            .catch(err => console.log(err));\n    }\n\n\n    return (\n        <div className=\"contact__container\">\n            <h1>{content[props.language].contactMe}</h1>\n            { errorMessage && \n                < StatusMessage \n                    text={content[props.language].errorMessage[errorMessage]} \n                    error={true}\n                />\n            }\n            { successMessage && \n                < StatusMessage \n                    text={content[props.language].successMessage} \n                    error={false}\n                />\n            }\n            { !isLoading &&\n                <ContactForm \n                language={props.language}\n                formData={formData}\n                changeInputHandler={changeInputHandler}\n                />\n            }\n            { isLoading &&\n                <LoadingSpiner/>\n            }\n            { !isLoading &&\n                <Button \n                    text={content[props.language].send} className=\"center\"\n                    onClick={sendMail}\n                />\n            }\n        </div>\n    )\n};\n\nexport default Contact;"],"sourceRoot":""}