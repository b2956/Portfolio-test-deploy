{"version":3,"sources":["config/context/languageContext.js","Components/Button/Button.js","Components/LoadingSpinner/LoadingSpiner.js","Components/LanguagePicker/LanguagePicker.js","Components/MainNav/MainNav.js","Components/HamburgerButton/HamburgerButton.js","Components/MobileNav/MobileNav.js","Components/Overlay/Overlay.js","Pages/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","Button","props","type","className","onClick","text","LoadingSpiner","Language","mobileNav","createPortal","language","changeLanguage","document","getElementById","MainNav","useContext","LanguageContext","content","pt","home","about","projects","skills","blog","contact","en","to","href","target","rel","title","HamburgerButton","ReactDOM","mobileNavStatusHandler","MobileNav","Overlay","Home","webDev","slogan1","slogan2","seeMyWork","About","lazy","Projects","Skills","Contact","Blog","App","useState","setLanguage","mobileNavIsOpen","setMobileNavIsOpen","useEffect","query","window","location","toString","split","lang","innerWidth","isMobile","setIsMobile","changeLanguageHandler","event","classList","contains","addEventListener","querySelector","hamburgerMenu","overlay","add","remove","setTimeout","routes","exact","path","Provider","value","Fragment","fallback","Date","getFullYear","Boolean","hostname","match","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.23c44d56.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext();","import React from 'react';\n\nimport './Button.scss';\n\n\nconst Button = props => {\n    return (\n        <button \n            type=\"button\"\n            className={props.className}\n            onClick={props.onClick}\n        >\n            {props.text}\n        </button>\n    )\n};\n\n\nexport default Button;","import React from 'react';\n\nimport './LoadingSpiner.scss';\n\nconst LoadingSpiner = () => {\n    return (\n       <div className=\"loading-spiner__container\">\n           <div className=\"loading-spiner\"></div>\n       </div>\n    )\n}\n\nexport default LoadingSpiner;","import React from 'react';\nimport { createPortal } from 'react-dom';\n\nimport './LanguagePicker.scss';\n\nconst Language = props => {\n\n    if(props.mobileNav) {\n        return createPortal(\n            <div className=\"language-picker__container mobile-nav\">\n                <h5>\n                    <span \n                        className={\n                            `language-picker__portugues ${props.language === 'pt' ? 'active' : ''}`\n                        }\n                        onClick={props.changeLanguage}\n                    >\n                        Português\n                    </span> \n                    <span> | </span>\n                    <span \n                        className={\n                            `language-picker__english ${props.language === 'en' ? 'active' : ''}`\n                        }\n                        onClick={props.changeLanguage}\n                    >\n                        English\n                    </span> \n                </h5>\n            </div>, \n            document.getElementById('language-picker')\n        );\n    } else {\n        return (\n            <div className=\"language-picker__container\">\n                <h5>\n                    <span \n                        className={\n                            `language-picker__portugues ${props.language === 'pt' ? 'active' : ''}`\n                        }\n                        onClick={props.changeLanguage}\n                    >\n                        Português\n                    </span> \n                    <span> | </span>\n                    <span \n                        className={\n                            `language-picker__english ${props.language === 'en' ? 'active' : ''}`\n                        }\n                        onClick={props.changeLanguage}\n                    >\n                        English\n                    </span> \n                </h5>\n            </div>\n        );\n    }\n    \n};\n\nexport default Language;","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport LanguageContext from  '../../config/context/languageContext';\nimport LanguagePicker from '../LanguagePicker/LanguagePicker';\n\nimport './MainNav.scss';\n\nconst MainNav = props => {\n    const language = useContext(LanguageContext);\n\n    const content = {\n        pt: {\n            home: 'Home',\n            about: 'Sobre',\n            projects: 'Projetos',\n            skills: 'Habilidades',\n            blog: 'Blog',\n            contact: 'Contato'\n        },\n        en: {\n            home: 'Home',\n            about: 'About',\n            projects: 'Projects',\n            skills: 'Skills',\n            blog: 'Blog',\n            contact: 'Contact'\n        }\n    }\n\n    return (\n        <nav className={`${props.className}`}>\n            <ul className=\"nav__list\">\n                <li className=\"nav__list-switch\">\n                    <LanguagePicker\n                        changeLanguage={props.changeLanguage}\n                        language={language}\n                    />\n                </li>\n                <li className=\"nav__list-link\">\n                    <Link to=\"/\">\n                        {content[language].home}\n                    </Link>\n                </li>\n                <li className=\"nav__list-link\">\n                    <Link to=\"/my-work\">\n                    {content[language].projects}\n                    </Link>\n                </li>\n                <li className=\"nav__list-link\">\n                    <Link to=\"/about\">\n                    {content[language].about}\n                    </Link>\n                </li>\n                <li className=\"nav__list-link\">\n                    <Link to=\"/my-skills\">\n                    {content[language].skills}\n                    </Link>\n                </li>\n                <li className=\"nav__list-link\">\n                    <Link to=\"/blog\">\n                    {content[language].blog}\n                    </Link>\n                </li>\n                <li className=\"nav__list-link\">\n                    <Link to=\"/contact\">\n                    {content[language].contact}\n                    </Link>\n                </li>\n                <li className=\"nav__list-social-media\">\n                    <a href=\"https://github.com/b2956\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Go to Github profile\">\n                        {/* <img alt=\"GitHub Logo\" src={githubLogo}/> */}\n                        <i className=\"fab fa-github\"></i>\n                    </a>\n                    <a href=\"https://www.linkedin.com/in/bruno-favero-5521911b3/\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Go to linkedin profile\">\n                        {/* <img alt=\"Linked In Logo\" src={linkeInLogo}/> */}\n                        <i className=\"fab fa-linkedin\"></i>\n                    </a>\n                </li>\n            </ul>\n        </nav>\n    );\n}\n\nexport default MainNav;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './HamburgerButton.scss';\n\nconst HamburgerButton = props => {\n    return ReactDOM.createPortal (\n        <div \n            className=\"hamburger-menu__container\"\n            onClick={props.mobileNavStatusHandler}\n        >   \n            <div className=\"hamburger-menu__button\"></div>\n        </div>,\n        document.getElementById('mobile-nav')\n    )\n};\n\nexport default HamburgerButton;","import React, { useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\n\nimport LanguageContext from  '../../config/context/languageContext';\n\nimport './MobileNav.scss';\n\nconst MobileNav = props => {\n    const language = useContext(LanguageContext);\n\n    const content = {\n        pt: {\n            home: 'Home',\n            about: 'Sobre',\n            projects: 'Projetos',\n            skills: 'Habilidades',\n            blog: 'Blog',\n            contact: 'Contato'\n        },\n        en: {\n            home: 'Home',\n            about: 'About',\n            projects: 'Projects',\n            skills: 'Skills',\n            blog: 'Blog',\n            contact: 'Contact'\n        }\n    }\n\n    return ReactDOM.createPortal (\n        <nav className=\"mobile-nav__container\">\n            <ul className=\"mobile-nav__list\">\n                <li className=\"mobile-nav__list-link\">\n                    <Link \n                        to=\"/\"\n                        onClick={props.mobileNavStatusHandler}\n                    >\n                        {content[language].home}\n                    </Link>\n                </li>\n                <li className=\"mobile-nav__list-link\">\n                    <Link \n                        to=\"/my-work\"\n                        onClick={props.mobileNavStatusHandler}    \n                    >\n                    {content[language].projects}\n                    </Link>\n                </li>\n                <li className=\"mobile-nav__list-link\">\n                    <Link \n                        to=\"/about\"\n                        onClick={props.mobileNavStatusHandler}\n                    >\n                    {content[language].about}\n                    </Link>\n                </li>\n                <li className=\"mobile-nav__list-link\">\n                    <Link \n                        onClick={props.mobileNavStatusHandler}\n                        to=\"/my-skills\"\n                    >\n                    {content[language].skills}\n                    </Link>\n                </li>\n                <li className=\"mobile-nav__list-link\">\n                    <Link \n                        onClick={props.mobileNavStatusHandler}\n                        to=\"/blog\"\n                    >\n                    {content[language].blog}\n                    </Link>\n                </li>\n                <li className=\"mobile-nav__list-link\">\n                    <Link \n                        to=\"/contact\"\n                        onClick={props.mobileNavStatusHandler}    \n                    >\n                    {content[language].contact}\n                    </Link>\n                </li>\n                <li className=\"mobile-nav__list-social-media\">\n                    <a href=\"https://github.com/b2956\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Go to Github profile\">\n                        {/* <img alt=\"GitHub Logo\" src={githubLogo}/> */}\n                        <i className=\"fab fa-github\"></i>\n                    </a>\n                    <a href=\"https://www.linkedin.com/in/bruno-favero-5521911b3/\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Go to linkedin profile\">\n                        {/* <img alt=\"Linked In Logo\" src={linkeInLogo}/> */}\n                        <i className=\"fab fa-linkedin\"></i>\n                    </a>\n                </li>\n            </ul>\n        </nav>,\n        document.getElementById('mobile-nav')\n    )\n}\n\nexport default MobileNav;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Overlay.scss';\n\n\nconst Overlay = props => {\n    return ReactDOM.createPortal(\n        <div className=\"overlay\" onClick={props.onClick}></div>,\n        document.getElementById('overlay')\n    );\n}\n\nexport default Overlay;","import React, { useContext } from 'react';\nimport {Link} from 'react-router-dom';\n\nimport LanguageContext from  '../../config/context/languageContext';\nimport Button from '../../Components/Button/Button';\n\nimport './Home.scss';\n\nconst Home = () => {\n    const language = useContext(LanguageContext);\n\n    const content = {\n        pt: {\n            webDev: 'DESENVOLVEDOR WEB',\n            slogan1: 'Posso resolver seus problemas',\n            slogan2: 'e transformar suas ideias em realidade',\n            seeMyWork: 'Ver Projetos',\n            about: 'Sobre Mim'\n        },\n        en: {\n            webDev: 'WEB DEVELOPER',\n            slogan1: 'I can help you solve your problems',\n            slogan2: 'and turn your ideas into reality',\n            seeMyWork: 'See my Work',\n            about: 'About Me'\n        }\n    };\n\n    return (\n        <div className=\"home__container\">\n            <div className=\"first-name__container\">\n                <h1 className=\"first-name\">Bruno</h1>\n            </div>\n            <div className=\"second-column\">\n                <h1 className=\"last-name\">Fávero</h1>\n                <h2 className=\"web-dev\">\n                    {content[language].webDev}\n                </h2>\n                <h2 className=\"slogan-1\">\n                    {content[language].slogan1}\n                </h2>\n                <h2 className=\"slogan-2\">\n                    {content[language].slogan2}\n                </h2>\n                <div className=\"buttons__container\">\n                    <Link to=\"/about\">\n                        <Button \n                            text={content[language].about}\n                        />\n                    </Link>\n                    <Link to=\"/my-work\">\n                        <Button \n                            text={content[language].seeMyWork}\n                        />\n                    </Link>\n                </div>\n            </div>            \n        </div>\n    )\n};\n\nexport default Home;","import React, { useState, useEffect, Suspense } from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport LanguageContext from  './config/context/languageContext';\n\nimport MainNav from './Components/MainNav/MainNav';\nimport HamburgerButton from './Components/HamburgerButton/HamburgerButton';\nimport MobileNav from './Components/MobileNav/MobileNav';\nimport Overlay from './Components/Overlay/Overlay';\nimport LanguagePicker from './Components/LanguagePicker/LanguagePicker';\nimport LoadingSpinner from './Components/LoadingSpinner/LoadingSpiner';\n\nimport './App.scss';\n\nimport Home from './Pages/Home/Home';\n// import About from './Pages/About/About';\n// import Projects from './Pages/Projects/Projects';\n// import Skills from './Pages/Skills/Skills';\n// import Contact from './Pages/Contact/Contact';\n// import Blog from './Pages/Blog/Blog';\n\nconst About = React.lazy(() => import('./Pages/About/About'));\nconst Projects = React.lazy(() => import('./Pages/Projects/Projects'));\nconst Skills = React.lazy(() => import('./Pages/Skills/Skills'));\nconst Contact = React.lazy(() => import('./Pages/Contact/Contact'));\nconst Blog = React.lazy(() => import('./Pages/Blog/Blog'));\n\nfunction App() {\n  const [language, setLanguage] = useState('pt');\n  const [mobileNavIsOpen, setMobileNavIsOpen] = useState(false);\n\n  useEffect(() => {\n    const query = window.location.toString().split('?')[1];\n\n    if(query) {\n      const lang = query.split('=')[1];\n      setLanguage(lang);\n    }\n  }, []);\n\n  const [isMobile, setIsMobile] = useState(() => {\n    if (window.innerWidth > 600) {\n      return false;\n    } else {\n      return true;\n    }\n  });\n\n  const changeLanguageHandler = event => {\n    event.target.classList.contains('language-picker__portugues') ? setLanguage('pt') : setLanguage('en');\n  }\n\n  window.addEventListener(\"resize\", () => {\n    if (window.innerWidth > 600) {\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n    }\n  })\n\n  const mobileNavStatusHandler = () => {\n    const mobileNav = document.querySelector('.mobile-nav__container');\n    const hamburgerMenu = document.querySelector('.hamburger-menu__container');\n    const overlay = document.querySelector('.overlay');\n\n\n    if(mobileNav) {\n      mobileNav.classList.add('leave');\n      overlay.classList.add('leave');\n      hamburgerMenu.classList.remove('open');\n\n      setTimeout(() => {\n        setMobileNavIsOpen(false);\n      }, 500);\n      return;\n    }\n    hamburgerMenu.classList.add('open');\n    setMobileNavIsOpen(true);\n  }\n\n  const routes = <Switch>\n    <Route exact path=\"/\" >\n      < Home/>\n    </Route>\n    <Route exact path=\"/about\" >\n      <About/>\n    </Route>\n    <Route exact path=\"/my-work\" >\n      <Projects isMobile={isMobile}/>\n    </Route>\n    <Route exact path=\"/my-skills\" >\n      <Skills isMobile={isMobile}/>\n    </Route>\n    <Route exact path=\"/blog\" >\n      <Blog language={language}/>\n    </Route>\n    <Route exact path=\"/contact\" >\n      <Contact language={language}/>\n    </Route>\n    < Redirect to=\"/\" />\n  </Switch>\n  \n  return (\n    <div className=\"app__container\">\n      <Router>\n          <LanguageContext.Provider value={language}>\n            <MainNav \n              className=\"app__container-nav\"\n              changeLanguage={changeLanguageHandler}\n            />\n            < LanguagePicker \n              mobileNav={true}\n              language={language}\n              changeLanguage={changeLanguageHandler}\n            />\n            <HamburgerButton \n              mobileNavStatusHandler={mobileNavStatusHandler}\n            />\n            {mobileNavIsOpen && \n              < React.Fragment>\n                < Overlay onClick={mobileNavStatusHandler}/>\n                <MobileNav\n                  mobileNavStatusHandler={mobileNavStatusHandler}\n                />\n              </React.Fragment>\n            }\n            <main>\n              <div className=\"app__container-main\">\n                <Suspense fallback={<LoadingSpinner/>} >{routes}</Suspense>\n              </div>\n            </main>\n          </LanguageContext.Provider>\n      </Router>\n      <div className=\"copyright\" >\n        Copyright &copy; Bruno Favero { new Date().getFullYear() } all rights reserved\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}